From 3a266667ad3112489885558f3c04189c1ed3ec74 Mon Sep 17 00:00:00 2001
From: Khralkatorrix <garuda2550@gmail.com>
Date: Sat, 4 Feb 2023 16:14:28 +0700
Subject: [PATCH 21/23] wing.dll16: Update to winevdm-0.8.1.

---
 dlls/wing.dll16/wing.c | 23 ++++++++++++++++-------
 1 file changed, 16 insertions(+), 7 deletions(-)

diff --git a/dlls/wing.dll16/wing.c b/dlls/wing.dll16/wing.c
index f6778def396..07242ba0916 100644
--- a/dlls/wing.dll16/wing.c
+++ b/dlls/wing.dll16/wing.c
@@ -36,6 +36,7 @@ struct dib_segptr_bits
     HBITMAP   bmp;
     WORD      sel;
     WORD      count;
+    BOOL      topdown;
 };
 
 static struct list dib_segptr_list = LIST_INIT( dib_segptr_list );
@@ -55,7 +56,7 @@ static void cleanup_segptr_bits(void)
     }
 }
 
-static SEGPTR alloc_segptr_bits( HBITMAP bmp, void *bits32 )
+static SEGPTR alloc_segptr_bits( HBITMAP bmp, void *bits32, BOOL topdown )
 {
     DIBSECTION dib;
     unsigned int i, size;
@@ -72,6 +73,7 @@ static SEGPTR alloc_segptr_bits( HBITMAP bmp, void *bits32 )
     bits->bmp   = bmp;
     bits->count = (size + 0xffff) / 0x10000;
     bits->sel   = AllocSelectorArray16( bits->count );
+    bits->topdown = topdown;
 
     for (i = 0; i < bits->count; i++)
     {
@@ -140,8 +142,8 @@ BOOL16 WINAPI WinGRecommendDIBFormat16(BITMAPINFO *bmpi)
 	return FALSE;
 
     bmpi->bmiHeader.biSize = sizeof(BITMAPINFOHEADER);
-    bmpi->bmiHeader.biWidth = 320;
-    bmpi->bmiHeader.biHeight = -1;
+    bmpi->bmiHeader.biWidth = 1;
+    bmpi->bmiHeader.biHeight = 1;
     bmpi->bmiHeader.biPlanes = 1;
     bmpi->bmiHeader.biBitCount = 8;
     bmpi->bmiHeader.biCompression = BI_RGB;
@@ -179,7 +181,7 @@ HBITMAP16 WINAPI WinGCreateBitmap16(HDC16 hdc, BITMAPINFO *bmpi, SEGPTR *bits)
     hbitmap = CreateDIBSection( HDC_32(hdc), bmpi, DIB_RGB_COLORS, &bits32, 0, 0 );
     if (hbitmap)
     {
-        SEGPTR segptr = alloc_segptr_bits( hbitmap, bits32 );
+        SEGPTR segptr = alloc_segptr_bits( hbitmap, bits32, (bmpi->bmiHeader.biHeight < 0) );
         if (bits) *bits = segptr;
     }
     return HBITMAP_16(hbitmap);
@@ -192,10 +194,17 @@ SEGPTR WINAPI WinGGetDIBPointer16(HBITMAP16 hWinGBitmap, BITMAPINFO* bmpi)
 {
     struct dib_segptr_bits *bits;
 
-    if (bmpi) FIXME( "%04x %p: setting BITMAPINFO not supported\n", hWinGBitmap, bmpi );
-
     LIST_FOR_EACH_ENTRY( bits, &dib_segptr_list, struct dib_segptr_bits, entry )
-        if (HBITMAP_16(bits->bmp) == hWinGBitmap) return MAKESEGPTR( bits->sel, 0 );
+    if (HBITMAP_16(bits->bmp) == hWinGBitmap)
+    {
+        DIBSECTION dib;
+        if (bmpi && (GetObjectA(bits->bmp, sizeof(DIBSECTION), &dib) == sizeof(DIBSECTION)))
+        {
+            memcpy(bmpi, &(dib.dsBmih), sizeof(BITMAPINFOHEADER));
+            if (bits->topdown) bmpi->bmiHeader.biHeight = -bmpi->bmiHeader.biHeight;
+        }
+        return MAKESEGPTR( bits->sel, 0 );
+    }
 
     return 0;
 }
-- 
2.39.1

