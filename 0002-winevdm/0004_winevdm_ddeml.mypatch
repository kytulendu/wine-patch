From cf9de2b90da61bfba95cd6dc050ca68ef64efad7 Mon Sep 17 00:00:00 2001
From: Khral Steelforge <garuda2550@gmail.com>
Date: Mon, 18 Feb 2019 22:30:18 +0700
Subject: ddeml.dll16: Port the patch from winevdm.

from https://github.com/otya128/winevdm/tree/v0.7.0/ddeml

Signed-off-by: Khral Steelforge <garuda2550@gmail.com>

diff --git a/dlls/ddeml.dll16/ddeml.c b/dlls/ddeml.dll16/ddeml.c
index c1ca8f75e1d..75f3f7b9a6a 100644
--- a/dlls/ddeml.dll16/ddeml.c
+++ b/dlls/ddeml.dll16/ddeml.c
@@ -211,6 +211,53 @@ static struct ddeml_thunk*      DDEML_AddThunk(DWORD instId, DWORD pfn16)
     return NULL;
 }
 
+HSZ hsz_progman;
+HSZ hsz_progman16;
+
+static void init_hsz(void)
+{
+    if (!hsz_progman)
+    {
+        hsz_progman = (HSZ)(ULONG_PTR)AddAtomA("Progman");
+    }
+    if (!hsz_progman16)
+    {
+        hsz_progman16 = (HSZ)(ULONG_PTR)AddAtomA("Progman16");
+    }
+}
+
+static HSZ service16_32(HSZ hsz)
+{
+    init_hsz();
+    if (hsz_progman == hsz)
+        return hsz_progman16;
+    return hsz;
+}
+
+static HSZ service32_16(HSZ hsz)
+{
+    init_hsz();
+    if (hsz_progman16 == hsz)
+        return hsz_progman;
+    return hsz;
+}
+
+static HSZ topic16_32(HSZ hsz)
+{
+    init_hsz();
+    if (hsz_progman == hsz)
+        return hsz_progman16;
+    return hsz;
+}
+
+static HSZ topic32_16(HSZ hsz)
+{
+    init_hsz();
+    if (hsz_progman16 == hsz)
+        return hsz_progman;
+    return hsz;
+}
+
 /******************************************************************************
  *            DdeInitialize   (DDEML.2)
  */
@@ -219,6 +266,12 @@ UINT16 WINAPI DdeInitialize16(LPDWORD pidInst, PFNCALLBACK16 pfnCallback,
 {
     UINT16 ret;
     struct ddeml_thunk* thunk;
+    /* Undocumented 0x800 causes DdeClientTransaction to call DdeUninitialize which will likely
+     * create a deadlock with XTYP_EXECUTE if the client and server are in the same process
+     */
+    afCmd &= ~0x800;
+    /* MF_POSTMSGS causes also deadlocks in DdeDisconnect in the client thread */
+    afCmd &= ~MF_POSTMSGS;
 
     EnterCriticalSection(&ddeml_cs);
     if ((thunk = DDEML_AddThunk(*pidInst, (DWORD)pfnCallback)))
@@ -267,7 +320,7 @@ HCONVLIST WINAPI DdeConnectList16(DWORD idInst, HSZ hszService, HSZ hszTopic,
 
     if (pCC16)
         map1632_conv_context(pCC = &cc, pCC16);
-    return DdeConnectList(idInst, hszService, hszTopic, hConvList, pCC);
+    return DdeConnectList(idInst, service16_32(hszService), topic16_32(hszTopic), hConvList, pCC);
 }
 
 /*****************************************************************
@@ -304,10 +357,16 @@ HCONV WINAPI DdeConnect16(DWORD idInst, HSZ hszService, HSZ hszTopic,
 {
     CONVCONTEXT	        cc;
     CONVCONTEXT*	pCC = NULL;
+    DWORD count;
+    HCONV result;
 
     if (pCC16)
         map1632_conv_context(pCC = &cc, pCC16);
-    return DdeConnect(idInst, hszService, hszTopic, pCC);
+
+    ReleaseThunkLock(&count);
+    result = DdeConnect(idInst, service16_32(hszService), topic16_32(hszTopic), pCC);
+    RestoreThunkLock(count);
+    return result;
 }
 
 /*****************************************************************
@@ -383,14 +442,20 @@ HDDEDATA WINAPI DdeClientTransaction16(LPVOID pData, DWORD cbData, HCONV hConv,
                                        HSZ hszItem, UINT16 wFmt, UINT16 wType,
                                        DWORD dwTimeout, LPDWORD pdwResult)
 {
+    HDDEDATA ret;
+    DWORD count;
+
     if (cbData != (DWORD)-1)
     {
         /* pData is not a pointer if cbData is -1, so we linearize the address
          * here rather than in the calling code. */
         pData = MapSL((SEGPTR)pData);
     }
-    return DdeClientTransaction(pData, cbData, hConv, hszItem,
+    ReleaseThunkLock(&count);
+    ret = DdeClientTransaction(pData, cbData, hConv, hszItem,
                                 wFmt, wType, dwTimeout, pdwResult);
+    RestoreThunkLock(count);
+    return ret;
 }
 
 /*****************************************************************
@@ -408,7 +473,7 @@ BOOL16 WINAPI DdeAbandonTransaction16(DWORD idInst, HCONV hConv, DWORD idTransac
  */
 BOOL16 WINAPI DdePostAdvise16(DWORD idInst, HSZ hszTopic, HSZ hszItem)
 {
-    return (BOOL16)DdePostAdvise(idInst, hszTopic, hszItem);
+    return (BOOL16)DdePostAdvise(idInst, topic16_32(hszTopic), hszItem);
 }
 
 /*****************************************************************
@@ -458,7 +523,7 @@ BOOL16 WINAPI DdeEnableCallback16(DWORD idInst, HCONV hConv, UINT16 wCmd)
  */
 HDDEDATA WINAPI DdeNameService16(DWORD idInst, HSZ hsz1, HSZ hsz2, UINT16 afCmd)
 {
-    return DdeNameService(idInst, hsz1, hsz2, afCmd);
+    return DdeNameService(idInst, service16_32(hsz1), hsz2, afCmd);
 }
 
 /*****************************************************************
@@ -496,11 +561,11 @@ UINT16 WINAPI DdeQueryConvInfo16(HCONV hConv, DWORD idTransaction,
 
     ci16.cb = lpConvInfo->cb;
     ci16.hUser = ci32.hUser;
-    ci16.hConvPartner = ci32.hConvPartner;
-    ci16.hszSvcPartner = ci32.hszSvcPartner;
-    ci16.hszServiceReq = ci32.hszServiceReq;
-    ci16.hszTopic = ci32.hszTopic;
-    ci16.hszItem = ci32.hszItem;
+    ci16.hConvPartner = service32_16(ci32.hConvPartner);
+    ci16.hszSvcPartner = service32_16(ci32.hszSvcPartner);
+    ci16.hszServiceReq = service32_16(ci32.hszServiceReq);
+    ci16.hszTopic = topic32_16(ci32.hszTopic);
+    ci16.hszItem = topic32_16(ci32.hszItem);
     ci16.wFmt = ci32.wFmt;
     ci16.wType = ci32.wType;
     ci16.wStatus = ci32.wStatus;
