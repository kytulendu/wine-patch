From c4656371fa2b93a8ba9e0e8218e16253db4aa74b Mon Sep 17 00:00:00 2001
From: Khral Steelforge <garuda2550@gmail.com>
Date: Sun, 24 Feb 2019 21:41:03 +0700
Subject: ole2nls.dll16: Port the patch from winevdm.

from https://github.com/otya128/winevdm/tree/v0.7.0/ole2nls

Signed-off-by: Khral Steelforge <garuda2550@gmail.com>

diff --git a/dlls/ole2nls.dll16/ole2nls.c b/dlls/ole2nls.dll16/ole2nls.c
index b4b332fefb4..37c39beca2e 100644
--- a/dlls/ole2nls.dll16/ole2nls.c
+++ b/dlls/ole2nls.dll16/ole2nls.c
@@ -38,6 +38,33 @@
 
 WINE_DEFAULT_DEBUG_CHANNEL(ole);
 
+/* FIXME: other language flags? */
+
+/* same as win32 */
+#define NORM_IGNORECASE16           0x00000001
+#define NORM_IGNORENONSPACE16       0x00000002
+#define NORM_IGNORESYMBOLS16        0x00000004
+/* different from win32 */
+#define NORM_IGNOREWIDTH16          0x00000008
+#define NORM_IGNOREKANATYPE16       0x00000040
+/* deleted? */
+#define NORM_IGNOREJAPANACCENT16    0x00000080
+#define NORM_IGNOREKASHIDA16        0x00040000
+
+#define NORM_ALL16 (NORM_IGNORECASE16 | NORM_IGNORENONSPACE16 | NORM_IGNORESYMBOLS16 | NORM_IGNOREWIDTH16 | NORM_IGNOREKANATYPE16 | NORM_IGNOREJAPANACCENT16 | NORM_IGNOREKASHIDA16)
+
+/* same as win32 */
+#define LCMAP_LOWERCASE16    0x00000100
+#define LCMAP_UPPERCASE16    0x00000200
+#define LCMAP_SORTKEY16      0x00000400
+/* different from win32 */
+#define LCMAP_HALFWIDTH16    0x00000800
+#define LCMAP_FULLWIDTH16    0x00001000
+#define LCMAP_HIRAGANA16     0x00002000
+#define LCMAP_KATAKANA16     0x00004000
+
+#define LCMAP_ALL16 (LCMAP_LOWERCASE16 | LCMAP_UPPERCASE16 | LCMAP_SORTKEY16 | LCMAP_HALFWIDTH16 | LCMAP_FULLWIDTH16 | LCMAP_HIRAGANA16 | LCMAP_KATAKANA16)
+
 static LPVOID lpNLSInfo = NULL;
 
 /******************************************************************************
@@ -90,20 +117,77 @@ LANGID WINAPI GetSystemDefaultLangID16(void)
     return GetSystemDefaultLangID();
 }
 
+static DWORD convert_NORM16_to_NORM(DWORD flags16)
+{
+    DWORD flags = 0;
+    if (flags16 & NORM_IGNORECASE16)
+        flags |= NORM_IGNORECASE;
+    if (flags16 & NORM_IGNORENONSPACE16)
+        flags |= NORM_IGNORENONSPACE;
+    if (flags16 & NORM_IGNORESYMBOLS16)
+        flags |= NORM_IGNORESYMBOLS;
+    if (flags16 & NORM_IGNOREWIDTH16)
+        flags |= NORM_IGNOREWIDTH;
+    if (flags16 & NORM_IGNOREKANATYPE16)
+        flags |= NORM_IGNOREKANATYPE;
+    if (flags16 & NORM_IGNOREJAPANACCENT16)
+    {
+        FIXME("NORM_IGNOREJAPANACCENT\n");
+        flags |= 0;
+    }
+    if (flags16 & NORM_IGNOREKASHIDA16)
+    {
+        FIXME("NORM_IGNOREKASHIDA\n");
+        flags |= 0;
+    }
+    return flags;
+}
+static DWORD convert_LCMAP16_to_LCMAP(DWORD mapflags16)
+{
+    DWORD mapflags = 0;
+    if (mapflags16 & LCMAP_LOWERCASE16)
+        mapflags |= LCMAP_LOWERCASE;
+    if (mapflags16 & LCMAP_UPPERCASE16)
+        mapflags |= LCMAP_UPPERCASE;
+    if (mapflags16 & LCMAP_SORTKEY16)
+        mapflags |= LCMAP_SORTKEY;
+    if (mapflags16 & LCMAP_HALFWIDTH16)
+        mapflags |= LCMAP_HALFWIDTH;
+    if (mapflags16 & LCMAP_FULLWIDTH16)
+        mapflags |= LCMAP_FULLWIDTH;
+    if (mapflags16 & LCMAP_HIRAGANA16)
+        mapflags |= LCMAP_HIRAGANA;
+    if (mapflags16 & LCMAP_KATAKANA16)
+        mapflags |= LCMAP_KATAKANA;
+    return mapflags | convert_NORM16_to_NORM(mapflags16);
+}
+
 /******************************************************************************
  *		LCMapStringA	[OLE2NLS.6]
  */
-INT16 WINAPI LCMapString16(LCID lcid, DWORD mapflags, LPCSTR srcstr, INT16 srclen,
+INT16 WINAPI LCMapString16(LCID lcid, DWORD mapflags16, LPCSTR srcstr, INT16 srclen,
 			   LPSTR dststr, INT16 dstlen)
 {
-    return LCMapStringA(lcid, mapflags, srcstr, srclen, dststr, dstlen);
+    DWORD mapflags = 0;
+    if ((mapflags16 & ~(LCMAP_ALL16 | NORM_ALL16)) != 0)
+    {
+        return 0;
+    }
+    mapflags = convert_LCMAP16_to_LCMAP(mapflags16);
+    return (INT16)LCMapStringA(lcid, mapflags, srcstr, srclen, dststr, dstlen);
 }
 
 /***********************************************************************
  *           CompareStringA       (OLE2NLS.8)
  */
-INT16 WINAPI CompareString16(LCID lcid, DWORD flags, LPCSTR str1, INT16 len1, LPCSTR str2, INT16 len2)
+INT16 WINAPI CompareString16(LCID lcid, DWORD flags16, LPCSTR str1, INT16 len1, LPCSTR str2, INT16 len2)
 {
+    DWORD flags = 0;
+    if ((flags16 & ~NORM_ALL16) != 0)
+    {
+        return 0;
+    }
+    flags = convert_NORM16_to_NORM(flags16);
     return CompareStringA(lcid, flags, str1, len1, str2, len2);
 }
 
diff --git a/dlls/ole2nls.dll16/ole2nls.dll16.spec b/dlls/ole2nls.dll16/ole2nls.dll16.spec
index d3fc613473c..616fb0fd641 100644
--- a/dlls/ole2nls.dll16/ole2nls.dll16.spec
+++ b/dlls/ole2nls.dll16/ole2nls.dll16.spec
@@ -3,7 +3,7 @@
 3 pascal -ret16 GetUserDefaultLangID() GetUserDefaultLangID16
 4 pascal -ret16 GetSystemDefaultLangID() GetSystemDefaultLangID16
 5 pascal GetLocaleInfoA(long long ptr word) GetLocaleInfo16
-6 pascal -ret16 LCMapStringA(word long ptr word ptr word) LCMapString16
+6 pascal -ret16 LCMapStringA(long long ptr word ptr word) LCMapString16
 7 pascal -ret16 GetStringTypeA(long long str word ptr) GetStringType16
 8 pascal -ret16 CompareStringA(long long str word str word) CompareString16
 9 pascal -ret16 RegisterNLSInfoChanged(ptr) RegisterNLSInfoChanged16
